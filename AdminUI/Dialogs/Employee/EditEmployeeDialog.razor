@using AutoMapper
@inject IMapper Mapper
<div class="form-container">
    <MudForm @ref="form" Spacing="spacing" style="width:400px">
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Mã NV" @bind-Value="Data.Id" Disabled="true" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Info" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Họ*" @bind-Value="Data.FirstName" Required="true" RequiredError="Họ không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Tên*" @bind-Value="Data.LastName" Required="true" RequiredError="Tên không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Chức vụ*" @bind-Value="Data.Position" Required="true" RequiredError="Chức vụ không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Work" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="CCCD*" @bind-Value="Data.IdentityNumber" Required="true" RequiredError="CCCD không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.CreditCard" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="SĐT*" @bind-Value="Data.PhoneNumber" Required="true" RequiredError="SĐT không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Phone" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Email*" @bind-Value="Data.Email" Required="true" RequiredError="Email không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Email" />
        <MudTextField Variant="Variant.Outlined" Margin="Margin.Dense" T="string" Label="Địa chỉ*" @bind-Value="Data.Address" Required="true" RequiredError="Địa chỉ không được để trống" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.LocationOn" />
        <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Ngày Sinh*" @bind-Date="Data.BirthDate" DateFormat="dd.MM.yyyy" Required Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Cake" />
        <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Ngày vào làm" @bind-Date="Data.StartDate" DateFormat="dd.MM.yyyy" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Event" />
        <div class="d-flex">
            <MudRadioGroup T="int" @bind-Value="Data.Gender">
                <MudRadio Value=1>Nam</MudRadio>
                <MudRadio Value=2>Nữ</MudRadio>
            </MudRadioGroup>
        </div>
        <div class="d-flex">
            <MudRadioGroup T="int" @bind-Value="Data.Status">
                <MudRadio Value=0>Hoạt động</MudRadio>
                <MudRadio Value=1>Khóa</MudRadio>
            </MudRadioGroup>
        </div>
    </MudForm>

    <div class="dialog-actions">
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="SubmitForm">
            <MudIcon Icon="@Icons.Material.Filled.Check" /> @(IsEditMode ? "Lưu thay đổi" : "Xác nhận")
        </MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="Cancel">
            <MudIcon Icon="@Icons.Material.Filled.Close" /> Hủy
        </MudButton>
    </div>
</div>

@code {
    private MudForm form;
    public EmployeeForm Data { get; set; } = new();
    [Parameter]
    public bool IsEditMode { get; set; }
    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; }

    private async Task SubmitForm()
    {
        await form.Validate();
        if (form.IsValid)
        {
            if (IsEditMode)
            {
                // Gọi hàm xử lý cập nhật nhân viên
                await UpdateEmployee();
            }
            else
            {
                // Gọi hàm xử lý thêm nhân viên mới
                await AddNewEmployee();
            }
            MudDialog.Close(DialogResult.Ok(Data));
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task UpdateEmployee()
    {
        // Xử lý cập nhật nhân viên ở đây
    }

    private async Task AddNewEmployee()
    {
        // Xử lý thêm nhân viên mới ở đây
    }

    int spacing = 0;
}

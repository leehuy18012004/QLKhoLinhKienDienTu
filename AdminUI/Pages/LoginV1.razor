@page "/loginv1"
@layout EmptyLayout
@inject HttpClient _http
@inject NavigationManager Navigation
@inject JwtAuthenticationStateProvider AuthenticationStateProvider
@inject AuthenticationService AuthenticationService

<div class="limiter">
	<div class="container-login100">
		<div class="wrap-login100">
			<div class="login100-pic js-tilt" data-tilt>
                <img src="login_v1/images/img-01.png" />
			</div>
			<form class="login100-form validate-form">
				<span class="login100-form-title">
					<strong>Hệ thống quản lý kho OceanVN</strong>
				</span>

				<div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
					<input class="input100" type="text" @bind-value=loginModel.Email placeholder="Email">
					<span class="focus-input100"></span>
					<span class="symbol-input100">
						<i class="fa fa-envelope" aria-hidden="true"></i>
					</span>
				</div>


				<div class="wrap-input100 validate-input" data-validate="Password is required">
					<input class="input100" type="password" @bind-value=loginModel.Password placeholder="Mật khẩu">
					<span class="focus-input100"></span>
					<span class="symbol-input100">
						<i class="fa fa-lock" aria-hidden="true"></i>
					</span>
				</div>

				<div class="container-login100-form-btn">
					<button type="button" @onclick=HandleLogin class="login100-form-btn">
						Đăng nhập
					</button>
				</div>

				<div class="text-center p-t-12">
					<span class="txt1">
						Quên
					</span>
					<a class="txt2" href="#">
						mật khẩu?
					</a>
				</div>
			</form>

		</div>
	</div>
</div>

@code {
	private LoginModel loginModel = new LoginModel();

	private async Task HandleLogin()
	{
		var success = await AuthenticationService.Login(loginModel);
		if (success)
		{
			Navigation.NavigateTo("dashboard");
		}
		else
		{
			// Handle failed login (e.g., show error message)
		}
	}
}